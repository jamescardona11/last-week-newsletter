---
import type { Post } from '@/lib/types/post.type'

import ContentLayout from '@/layouts/content/ContentLayout.astro'
import FormattedDate from '@/components/FormattedDate.astro'

import Link from '@/components/Link.astro'
import RenderBlocks from '@/components/notion/RenderBlocks.astro'

import Icons from '@/components/icons/Icons.astro'

import { getPostContent, getPostsData } from '@/lib/data/posts-provider'

export async function getStaticPaths() {
  const posts = await getPostsData()
  return posts.map((post, index) => ({
    params: { slug: post.slug },
    props: { post, next: posts[index - 1], prev: posts[index + 1] }
  }))
}

interface Props {
  post: Post
  next: Post
  prev: Post
}

const { post, next, prev } = Astro.props
const { title, date } = post

const result = await getPostContent(post)
const { blocks } = result
---

<ContentLayout>
  <div>
    <h1 class='inline-block text-4xl leading-tight font-heading lg:text-5xl'>
      {title}
    </h1>
    <div
      class='flex gap-2 mt-2 text-sm text-muted-foreground items-center flex-wrap md:flex-nowrap'
    >
      <FormattedDate date={date} />
    </div>
  </div>

  <!-- blocks is the data from notion -->
  {
    blocks && (
      <div class='pt-2 pb-8'>
        <RenderBlocks blocks={blocks} />
      </div>
    )
  }

  <hr class='border-t-2 border-zinc-700/5 dark:border-zinc-200/5' />

  <div class='flex flex-col items-center justify-center pb-6'>
    <Link href='/posts' class='flex items-center py-3 lg:py-6'>
      <Icons kind='chevronLeft' class='w-4 h-4 mr-1' />
      Back to posts
    </Link>
  </div>

  <div class='flex flex-row items-center justify-between'>
    {
      prev && (
        <Link
          href={`/posts/${prev.slug}`}
          class:list={[
            'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background',
            'hover:bg-accent hover:text-accent-foreground',
            'h-10 py-2 px-4'
          ]}
        >
          <Icons kind='chevronLeft' class='mr-2 h-4 w-4' />
          {prev.title}
        </Link>
      )
    }
    {
      next && (
        <Link
          href={`/posts/${next.slug}`}
          class:list={[
            'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background',
            'hover:bg-accent hover:text-accent-foreground',
            'h-10 py-2 px-4',
            'ml-auto'
          ]}
        >
          {next.title}
          <Icons kind='chevronRight' class='ml-2 h-4 w-4' />
        </Link>
      )
    }
  </div>
</ContentLayout>
